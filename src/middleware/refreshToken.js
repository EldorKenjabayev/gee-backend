const { OAuth2Client } = require("google-auth-library");
const db = require("../config/db");
const redis = require("../config/redis");

const client = new OAuth2Client(
  process.env.GOOGLE_CLIENT_ID,
  process.env.GOOGLE_CLIENT_SECRET
);

async function refreshAccessToken(user) {
  try {
    if (!user.google_refresh_token) {
      console.error("‚ùå –û—à–∏–±–∫–∞: –ù–µ—Ç Refresh Token, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤—Ö–æ–¥ –≤ Google!");
      return null;
    }

    console.log("üîÑ –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–≤—ã–π Access Token —á–µ—Ä–µ–∑ Refresh Token...");

    // ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º getToken(), –∞ –Ω–µ refreshToken()
    const { tokens } = await client.getToken({
      refresh_token: user.google_refresh_token,
    });

    if (!tokens || !tokens.access_token) {
      console.error("‚ùå Google –Ω–µ –≤–µ—Ä–Ω—É–ª –Ω–æ–≤—ã–π Access Token!");
      return null;
    }

    console.log("‚úÖ –ù–æ–≤—ã–π Access Token:", tokens.access_token);

    // ‚úÖ –û–±–Ω–æ–≤–ª—è–µ–º Access Token –≤ –ë–î
    await db.none("UPDATE users SET google_access_token = $1 WHERE id = $2", [
      tokens.access_token,
      user.id,
    ]);

    // ‚úÖ –ö–µ—à–∏—Ä—É–µ–º Access Token –≤ Redis (—á—Ç–æ–±—ã –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å –ë–î –∫–∞–∂–¥—ã–π —Ä–∞–∑)
    await redis.setex(`google_access_token:${user.id}`, 3500, tokens.access_token); // 58 –º–∏–Ω—É—Ç

    return tokens.access_token;
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ Access Token:", error.message);

    if (error.message.includes("invalid_grant")) {
      console.error("‚ùå Refresh Token –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω—É–∂–Ω–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ –≤–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Google.");
      return null;
    }

    return null;
  }
}

module.exports = { refreshAccessToken };
