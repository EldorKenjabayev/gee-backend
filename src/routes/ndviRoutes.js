const express = require("express");
const axios = require("axios");
const db = require("../config/db");
const authMiddleware = require("../middleware/authMiddleware");
const redis = require("../config/redis");
const { OAuth2Client } = require("google-auth-library");

const router = express.Router();
const client = new OAuth2Client(
  process.env.GOOGLE_CLIENT_ID,
  process.env.GOOGLE_CLIENT_SECRET
);

// –≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ä—è–¥–∞ NDVI (—á–µ—Ä–µ–∑ eval:evalscript)
router.post("/ndvi-time-series", authMiddleware, async (req, res) => {
  console.log("üî• NDVI Time Series API: –∑–∞–ø—Ä–æ—Å –ø–æ–ª—É—á–µ–Ω!");
  console.log("üìå –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞:", req.body);

  try {
    // –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞
    const { startYear, endYear, polygon } = req.body;
    const userId = req.user.id;

    // 1) –ù–∞—Ö–æ–¥–∏–º Access Token –≤ Redis –∏–ª–∏ –ë–î
    let accessToken = await redis.get(`google_access_token:${userId}`);
    if (!accessToken) {
      console.log("üîé Access Token –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ Redis. –ò—â–µ–º –≤ –ë–î...");
      const user = await db.one(
        "SELECT google_access_token FROM users WHERE id = $1",
        [userId]
      );
      accessToken = user.google_access_token;
    }

    if (!accessToken) {
      return res
        .status(401)
        .json({ error: "Google Access Token –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!" });
    }

    console.log("üîë –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–π Access Token:", accessToken);

    // 2) –°–æ–±–∏—Ä–∞–µ–º URL –¥–ª—è evalscript
    //    –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –¥–≤–æ–µ—Ç–æ—á–∏–µ –ø–µ—Ä–µ–¥ evalscript:  ... /projects/xxx:evalscript
    const geeUrl = `https://earthengine.googleapis.com/v1/projects/my-earth-engine-app:run`;
    // –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ "YYYY-MM-DD"
    const startDate = `${startYear}-01-01`;
    const endDate = `${endYear}-12-31`;

    // 3) –ü–∏—à–µ–º GEE-—Å–∫—Ä–∏–ø—Ç —Å—Ç—Ä–æ–∫–æ–π
    //    (evalscript –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å JS-–∫–æ–¥ –Ω–∞–ø—Ä—è–º—É—é)
    const script = `
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–≥–∏–æ–Ω, –∏—Å–ø–æ–ª—å–∑—É—è –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
      var region = ee.Geometry.Polygon(${JSON.stringify(polygon)});
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏—é MODIS NDVI
      var collection = ee.ImageCollection("MODIS/006/MOD13A1")
        .filterBounds(region)
        .filterDate("${startDate}", "${endDate}")
        .select("NDVI");
      
      // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Å—Ä–µ–¥–Ω–µ–≥–æ NDVI –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –µ–≥–æ –≤ —Å–≤–æ–π—Å—Ç–≤–∞
      var addMeanNdvi = function(image) {
        var meanDict = image.reduceRegion({
          reducer: ee.Reducer.mean(),
          geometry: region,
          scale: 250
        });
        
        // –£—á–∏—Ç—ã–≤–∞–µ–º –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ NDVI (x 0.0001)
        var rawNdvi = meanDict.get("NDVI");
        var scaledNdvi = ee.Number(rawNdvi).multiply(0.0001);
        
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º Feature (–±–µ–∑ –≥–µ–æ–º–µ—Ç—Ä–∏–∏) —Å –ø–æ–ª—è–º–∏ date –∏ ndvi
        return ee.Feature(null, {
          date: image.date().format("yyyy-MM-dd"),
          ndvi: scaledNdvi
        });
      };
      
      // –ü—Ä–∏–º–µ–Ω—è–µ–º addMeanNdvi –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–Ω–∏–º–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
      var withNdvi = collection.map(addMeanNdvi);
      
      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º FeatureCollection –≤ —Å–ø–∏—Å–æ–∫ (List)
      var resultList = withNdvi.toList(withNdvi.size());
      
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç (Earth Engine –≤–µ—Ä–Ω—ë—Ç JSON —Å–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π List)
      resultList;
    `;

    const requestData = {
      script,
    };

    console.log("üîó –ó–∞–ø—Ä–æ—Å –∫ GEE (evalscript):", geeUrl);
    console.log("üì° JSON:", JSON.stringify(requestData, null, 2));

    // 4) –î–µ–ª–∞–µ–º POST-–∑–∞–ø—Ä–æ—Å –∫ :evalscript
    const response = await axios.post(geeUrl, requestData, {
      headers: {
        Authorization: `Bearer ${accessToken}`,
        "Content-Type": "application/json",
      },
    });

    // 5) –û—Ç–≤–µ—Ç –ø—Ä–∏–¥—ë—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ EvaluateResponse
    //    –û–±—ã—á–Ω–æ: { name, state, results: { json: { type: 'List', value: [...] } } }
    console.log("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç GEE (NDVI Time Series):", response.data);

    if (!response.data.results || !response.data.results.json) {
      return res.status(500).json({
        error: "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å JSON –∏–∑ GEE (results.json –ø—É—Å—Ç).",
        rawResponse: response.data
      });
    }

    // 6) –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∏–µ–Ω—Ç—É —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ results.json
    //    –ó–¥–µ—Å—å –ª–µ–∂–∏—Ç "type": "List", "value": [ {type: 'Feature', properties: {...}} , ... ]
    res.json({ ndviTimeSeries: response.data.results.json });
  } catch (error) {
    console.error(
      "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ NDVI-–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ä—è–¥–∞:",
      error.response?.data || error.message
    );
    res.status(500).json({
      error: "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ NDVI-–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ä—è–¥–∞",
      details: error.response?.data || error.message,
    });
  }
});

module.exports = router;
